name: Deploy pull requests

on:
  # push:
  issue_comment:
    types: [created, updated]

env:
  TESTING_SERVER: testing.test.com

jobs:

  say-hello:
    runs-on: ubuntu-latest
    steps:
      - run: echo "It works! Running on branch ${{ github.ref }}, TESTING_SERVER is ${{env.TESTING_SERVER}}"

  deploy-check:
    runs-on: ubuntu-latest
    # if: github.event_name != 'push'
    steps:
      - name: acknowledge deployment request to commenter
        id: check
        uses: khan/pull-request-comment-trigger@master
        with:
          trigger: "/deploy"
          reaction: rocket
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    outputs:
      triggered: ${{ steps.check.outputs.triggered }}

  deploy:
    runs-on: ubuntu-latest
    needs: deploy-check
    # if: github.event_name == 'push' || 
    if: needs.deploy-check.outputs.triggered == 'true'
    steps:
      
      - uses: actions/checkout@v1
      
      - name: print some debug info
        id: print_debug
        run: |
          echo "github.event.issue.number=${{github.event.issue.number}}" # works for new comments event
          echo "github.event.number=${{github.event.number}}"
          echo "github.base_ref=${{ github.base_ref }}"
          echo "github.head_ref=${{ github.head_ref }}"
          echo "github.ref=${{ github.ref }}"
        
      # # Find the PR associated with this push, if there is one.
      # # Make it available in ${{ steps.findPr.outputs.pr }}
      # - name: find current pull request
      #   uses: jwalton/gh-find-current-pr@v1.3.0
      #   id: findPr
      #   with:
      #     # Can be "open", "closed", or "all".  Defaults to "open".
      #     state: open

      ## universal https://github.com/actions/checkout/issues/58#issuecomment-614041550
      - name: save PR number to environment
        id: save_pr
        run: |
          # PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH") # null
          # PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }') # "main"
          PR_NUMBER=${{github.event.issue.number}}
          echo "PR=$PR_NUMBER" >> $GITHUB_ENV

#       - name: get pull request ref
#         id: get_pull_request_ref
#         uses: octokit/request-action@v2.x
#         with:
#           route: GET /repos/:repository/pulls/:issue_id
#           repository: ${{ github.repository }}
#           issue_id: ${{ env.PR }}
#         env:
#           GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

#       - name: get branch name
#         uses: mdecoleman/pr-branch-name@1.2.0
#         id: get_branch_name
#         with:
#           repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: get branch name
        uses: tj-actions/branch-names@v5.2
        id: get_branch_name
#         with:
#           repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: save branch name to environment
        id: save_branch_name
#         run: echo "GIT_BRANCH=${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}" >> $GITHUB_ENV
#         run: echo "GIT_BRANCH=${{ steps.get_branch_name.outputs.branch }}" >> $GITHUB_ENV
#         run: echo "GIT_BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV
        run: |
          echo "GIT_BRANCH=${{ steps.get_branch_name.outputs.current_branch }}" >> $GITHUB_ENV
          echo "steps.get_branch_name.outputs.current_branch=${{ steps.get_branch_name.outputs.current_branch }}"

      - name: create deployment
        id: create_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments
          repository: ${{ github.repository }}
#           ref: ${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}
          ref: ${{ github.ref }}
          environment: dev
          auto_merge: false
          # Without this, it fails with 
          # Conflict: Commit status checks failed for feat/deploy-pr-ref-1.: 
          # {"contexts":[{"context":"deploy","state":"in_progress"}
          # https://docs.github.com/en/rest/reference/deployments#failed-commit-status-checks
          required_contexts: "[]"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: set deployment status to in progress
        id: start_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          environment: dev
          environment_url: https://${{ env.TESTING_SERVER }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: in_progress
          mediaType: '{"previews": ["flash", "ant-man"]}'
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: deploy the pull request
        run: |
          whoami
          export PR_DIR=pr/$PR
          echo "Here we should ssh to ${{env.TESTING_SERVER}} using appleboy/ssh-action@master"
          echo "and pull $GIT_BRANCH to $PR_DIR, then launch a build"
          sleep 10
          # randomly succeed or fail the deployment
          exit $(( $RANDOM % 10 >= 5 ))

      - name: set deployment status to success
        id: successful_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          environment: dev
          environment_url: https://${{ env.TESTING_SERVER }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          mediaType: '{"previews": ["ant-man"]}'
          state: success
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      
      # Add new emoji as positive feedback when the deployment worked
      - name: add positive reaction
        uses: dkershner6/reaction-action@v1
        if: success()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commentId: ${{ github.event.comment.id }}
          reaction: '+1'

      - name: set deployment status to failure
        id: failed_deployment
        uses: octokit/request-action@v2.x
        if: failure()
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          environment: dev
          environment_url: https://${{ env.TESTING_SERVER }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          mediaType: '{"previews": ["ant-man"]}'
          state: failure
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      # Add new emoji as negative feedback when the deployment failed
      - name: add negative reaction
        uses: dkershner6/reaction-action@v1
        if: failure()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commentId: ${{ github.event.comment.id }}
          reaction: '-1'
