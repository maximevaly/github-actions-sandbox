name: Deploy pull requests

on:
  # push:
  workflow_dispatch:
  issue_comment:
    types: [created, updated]

env:
  TESTING_SERVER: testing.test.com

jobs:

  say-hello:
    runs-on: ubuntu-latest
    steps:
      - run: echo "It works! Running on branch ${{ github.ref }}, TESTING_SERVER is ${{env.TESTING_SERVER}}"

  deploy-check:
    runs-on: ubuntu-latest
    steps:
      - name: acknowledge deployment request to commenter
        id: check
        uses: khan/pull-request-comment-trigger@master
        with:
          trigger: "/deploy"
          reaction: rocket
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    outputs:
      triggered: ${{ steps.check.outputs.triggered }}

  deploy:
    runs-on: ubuntu-latest
    needs: deploy-check
    if: needs.deploy-check.outputs.triggered == 'true'
    steps:
      
      - uses: actions/checkout@v1
      
      # Find the PR associated with this push, if there is one.
      # Make it available in ${{ steps.findPr.outputs.pr }}
      - name: find current pull request
        uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          # Can be "open", "closed", or "all".  Defaults to "open".
          state: open
          
      - name: save PR to environment]
        id: save_pr
        # run: echo "Your PR is ${PR}"
        run: echo "PR=${{ steps.findPr.outputs.pr }}" >> $GITHUB_ENV; echo "steps.findPr.outputs.pr=${{ steps.findPr.outputs.pr }}; PR=${{ env.PR }}"
        if: success() && steps.findPr.outputs.number

      - name: get pull request ref
        id: get_pull_request_ref
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repository/pulls/:issue_id
          repository: ${{ github.repository }}
          issue_id: ${{ env.PR }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: save branch name to environment
        id: save_branch_name
        run: echo "GIT_BRANCH=${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}" >> $GITHUB_ENV

      - name: debug log 2
        run: |
         echo "steps.get_pull_request_ref.outputs.data='${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}'"

      - name: create deployment
        id: create_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments
          repository: ${{ github.repository }}
          ref: ${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}
          environment: dev
          auto_merge: false
          # Without this, it fails with 
          # Conflict: Commit status checks failed for feat/deploy-pr-ref-1.: 
          # {"contexts":[{"context":"deploy","state":"in_progress"}
          # https://docs.github.com/en/rest/reference/deployments#failed-commit-status-checks
          required_contexts: "[]"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: set deployment status to in progress
        id: start_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          environment: dev
          environment_url: https://${{ env.TESTING_SERVER }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: in_progress
          mediaType: '{"previews": ["flash", "ant-man"]}'
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      # - name: deploy the pull request
      #   run: |
      #     # deployment logic goes here
      #     sleep 10
      #     # instead we randomly succeed or fail the deployment
      #     exit $(( $RANDOM % 10 >= 5 ))

      - name: deploy the pull request
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.TESTING_SERVER }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.PASSWORD }} 
          script: |
            whoami
            export PR_DIR=pr/$PR
            echo "Here we should ssh to ${{env.TESTING_SERVER}}"
            echo "and pull $GIT_BRANCH to $PR_DIR, then launch a build"

      - name: set deployment status to success
        id: successful_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          environment: dev
          environment_url: https://${{ env.TESTING_SERVER }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          mediaType: '{"previews": ["ant-man"]}'
          state: success
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: set deployment status to failure
        id: failed_deployment
        uses: octokit/request-action@v2.x
        if: failure()
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          environment: dev
          environment_url: https://${{ env.TESTING_SERVER }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          mediaType: '{"previews": ["ant-man"]}'
          state: failure
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
